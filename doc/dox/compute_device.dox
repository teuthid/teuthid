/*
  This file is part of the Teuthid project.
  Copyright (C) 2016-2017 Mariusz Przygodzki (mariusz.przygodzki@gmail.com)

    This library is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with the Teuthid.  If not, see <http://www.gnu.org/licenses/>.
*/


/*! \enum teuthid::compute_profile_t
 * \brief This enumeration includes named constants of OpenCL platform's 
 * or device's profile.
 *
 * \see compute_platform::profile(), compute_platform::is_full_profile(), 
 * compute_platform::is_embedded_profile().
 */
/*! \var teuthid::COMPUTE_FULL_PROFILE
 * Identifies a platform or device which supports the OpenCL 
 * <a href="https://www.khronos.org/registry/OpenCL/">specification</a>
 * (functionality defined as part of the core specification and does not 
 * require any extensions to be supported).
 */
/*! \var teuthid::COMPUTE_EMBEDDED_PROFILE
 * Identifies a platform or device which supports the OpenCL embedded 
 * profile. The embedded profile is defined to be a subset for each version of 
 * OpenCL.
 */
/*!
 * \var teuthid::COMPUTE_UNKNOWN_PROFILE
 * Unknown OpenCL platform's or device's profile (is undetermined).
 */


/*! \class teuthid::compute_device compute_device.hpp \ 
<teuthid/compute_device.hpp>
 * \brief This class holds specific information about the OpenCL
 * devices for a particular OpenCL \ref teuthid::compute_platform "platform".
 *
 * <a href="https://www.khronos.org/opencl/">OpenCL</a> is used as an interface 
 * for executing code on parallel devices such as GPUs and multi-core CPUs.
 * \note The Teuthid framework must be compiled with enabled 
 * \c BUILD_WITH_OPENCL option to be able to use the OpenCL platforms and 
 * devices.
 * \see compute_platform::devices().
 */

/*! \fn compute_device::compute_device()
 * \brief Constructs a new object of class compute_device.
 *
 * The new object is empty and <b>does not</b> contain information about any
 * OpenCL device.
 */

/*! \fn compute_device::~compute_device()
 * \brief Destructs an object of class compute_device.
 */


/*! \fn const compute_device_id_t &compute_device::id() const
 * \brief Returns the identifier for this device.
 *
 * \return the identifier for this OpenCL device. The returned value is the 
 * equivalent of \c cl_device_id. If it is equal to \c NULL, this OpenCL device 
 * is undetermined.
 */


/*! \fn const std::string &compute_device::name() const
 * \brief Return the name of this device.
 *
 * \return the name of this OpenCL device. The returned value is the 
 * equivalent of \c CL_DEVICE_NAME. If it is an empty string, a name of this 
 * OpenCL device is undetermined.
 */

