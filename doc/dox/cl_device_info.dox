/*
  This file is part of the Teuthid project.
  Copyright (C) 2016-2017 Mariusz Przygodzki (mariusz.przygodzki@gmail.com)

    This library is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with the Teuthid.  If not, see <http://www.gnu.org/licenses/>.
*/


/*! \typedef typedef std::multimap<opencl_platform_id_t, cl::device_info> \
 *  teuthid::opencl_devices_t;
 * \brief This is a type alias for the map containing objects of class
 * \ref teuthid::cl::device_info "device_info". 
 *
 * Each object of class \c device_info is assigned to the corresponding OpenCL 
 * platform which is identified by \c opencl_platform_id_t.
 * \see \ref teuthid::cl::device_info::devices() "device_info::devices()",
 * \ref teuthid::cl::platform_info::id() "platform_info::id()".
 */


/*! \class teuthid::cl::device_info cl_device_info.hpp \ 
<teuthid/cl_device_info.hpp>
 * \brief This class holds specific information about available the OpenCL
 * devices(s) for a particular OpenCL 
 * \ref teuthid::cl::platform_info "platform".
 *
 * <a href="https://www.khronos.org/opencl/">OpenCL</a> is used as an interface 
 * for executing code on parallel devices such as GPUs and multi-core CPUs. 
 */

/*! \fn device_info::device_info()
 * \brief Constructs a new object of class device_info.
 *
 * The new object is empty and <b>does not</b> contain information about any
 * OpenCL device.
 */

/*! \fn device_info::~device_info()
 * \brief Destructs an object of class device_info.
 */

/*! \fn opencl_platform_id_t device_info::platform_id() const
 * \brief Returns the identifier of OpenCL platform, which has this OpenCL 
 * device.
 *
 * The returned value is the equivalent of \c cl_platform_id. If it is equal to
 * \c NULL, the OpenCL platform is undetermined 
 * (and this OpenCL device as well).
 * \see platform_info::id().
 */


/*! \fn opencl_device_id_t device_info::id() const
 * \brief Returns the identifier for this OpenCL device.
 *
 * The returned value is the equivalent of \c cl_device_id. If it is equal to
 * \c NULL, the OpenCL device is undetermined.
 */

